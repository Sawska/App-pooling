<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap">
    <link rel="stylesheet" href="/css/demo.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4"></script>

 
    <title>View</title>
</head>
<body>
    <nav class="navbar navbar-light bg-white">
        <div class="LogoName">
                <img src="/img/Logo_vote.svg" class="logo">
                <a class="Name link" href="/">Vote Up</a>
                <a class=" mrgFirst createPool link" href="/createPool">Create Pool</a>
                <a class="mgA createPool link" href="/demo">Demo</a>
        </div>
        <div>
            <% if (username === "") { %>
                <button class="RgButton"><a class="link" href="/register">Register</a></button>
                <button class="LgButton"><a class="link" href="/login">Login</a></button>
                <% }  else {%>
                    <a class="name"><%= username %></a>
                <button class="LgButton"><a class="link" href="/logout">Logout</a></button>
                    <% } %>
        </div>
      </nav>
        <div class="wrapper">
            <div class="mainTheme">
                <h1><%= title %></h1>
                <canvas id="pieChart"></canvas>
            </div>
        </div>    
</body>
<script>

    function generateColor() {
        const letters = "0123456789ABCDEF";
        let color = "#"

        for(let i = 0;i<6;i++) {
            color += letters[Math.floor(Math.random() * 16)]
        }
        return color
    }

    function generateColors(n) {
        let colors = []
        for(let i = 0;i<n;i++) {
            colors.push(generateColor())
        }
        return colors
    }
    const socket = new WebSocket('ws://localhost:3000/socket');

    socket.addEventListener('open', (event) => {
    console.log("WebSocket connection opened");
    
    socket.send(`/requestInitialData/:<%= item_id %>`);
});


socket.addEventListener("message", (event) => {
    const responseData = JSON.parse(event.data);

    const labels = responseData.labels;
    const data = responseData.data;
    const colors = generateColors(labels.length)
    console.log('Received labels:', labels);
    console.log('Received data:', data);
    var ctx = document.getElementById("pieChart").getContext("2d");
var dataChar = {
    labels: labels,
    datasets: [{
        data: data,
        backgroundColor: colors,
        label: 'My dataset'
    }]
};
var myPieChart = new Chart(ctx,{
    type: 'pie',
    data: dataChar,
});

    
});

socket.addEventListener("close", (event) => {
    console.log('WebSocket connection closed');
});


</script>


</html> 